buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'

group 'com.netag'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // arrow
    compile "io.arrow-kt:arrow-core:$arrow_version"
    compile "io.arrow-kt:arrow-syntax:$arrow_version"
    kapt    "io.arrow-kt:arrow-meta:$arrow_version"

    // ktor server
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-serialization:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    // ktor client
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"

    // serialization
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"

    // graphql
    compile "com.apurebase:kgraphql:$kgraphql_version"
    compile "com.apurebase:kgraphql-ktor:$kgraphql_version"

    // koin
    compile "org.koin:koin-core:$koin_version"
    compile "org.koin:koin-ktor:$koin_version"
    testCompile "org.koin:koin-test:$koin_version"

    // mongo
    compile "org.litote.kmongo:kmongo-coroutine-serialization:$kmongo_version"

    // kotest
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-extensions-koin-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-arrow-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-property-jvm:$kotest_version"

    // kmock
    testImplementation "io.mockk:mockk:$kmock_version"
}
